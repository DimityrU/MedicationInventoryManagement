@using System.Globalization
@model MedicationInventoryManagement.Models.ViewModels.AllMedicationsViewModel;

@{
    ViewData["Title"] = "Medication Inventory";
}

@section Styles{
    <link rel="stylesheet" href="~/css/pagination.css" asp-append-version="true" />
}


<div class="position-fixed end-0 me-1 w-25">
    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
    {
        @await Html.PartialAsync("_ErrorMessage", error.ErrorMessage)
    }
</div>

<div class="row justify-content-center">
    <div class="col-lg-7">
        <div class="text-center mt-1 mb-2">
            <a href="@Url.Action("Create", "Home")" class="btn btn-primary btn-sm">Add new medication</a>
        </div>
        @if (@Model.Medications != null && @Model.Medications.Count() > 0)
        {
            <div class="card shadow-lg p-3 mb-2 bg-white rounded">
                <div class="card-body">
                    <h2 class="card-title text-center mb-3">Medication Inventory</h2>
                    <table id="medicationsTable" class="table table-hover">
                        <thead>
                            <tr>
                                <th>Medication Name</th>
                                <th>Expiration Date</th>
                                <th>Quantity</th>
                                <th>Options</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var medication in Model.Medications)
                            {
                                var color = string.Empty;
                                if (medication.ExpirationDate < DateTime.Now)
                                {
                                    color = "danger";
                                }
                                else if (medication.Quantity <= 10 || medication.ExpirationDate < DateTime.Now.Date.AddMonths(1))
                                {
                                    color = "warning";
                                }
                                <tr class="table-@color medication-row">
                                    <td>@medication.MedicationName</td>
                                    <td>@(medication.ExpirationDate.HasValue ? medication.ExpirationDate.Value.ToString("dd MMM yyyy") : "")</td>
                                    <td>@medication.Quantity</td>
                                    <td>
                                        @if (medication.ExpirationDate > DateTime.Now)
                                        {
                                            <a type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#modal-Reduce-@medication.MedicationId">Reduce Quantity</a>
                                        }
                                        else
                                        {
                                            <button class="btn btn-warning btn-sm" disabled>Reduce Quantity</button>
                                        }
                                        <a type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#modal-Remove-@medication.MedicationId">Remove</a>
                                        @{
                                            var removeMedication = new ModalData()
                                            {
                                                Id = medication.MedicationId,
                                                MessageText = "Are you sure you want to remove this medication from the inventory?",
                                                ButtonText = "Remove",
                                                ButtonType = "danger",
                                                ControllerName = "Home",
                                                ActionName = "Delete"
                                            };
                                            var reduceQuantity = new ModalData()
                                            {
                                                Id = medication.MedicationId,
                                                MessageText = "",
                                                ButtonText = "Reduce",
                                                ButtonType = "warning",
                                                ControllerName = "Home",
                                                ActionName = "Reduce",
                                                Quantity = medication.Quantity
                                            };
                                        }
                                    </td>
                                </tr>
                                @await Html.PartialAsync("_Modal", reduceQuantity)
                                @await Html.PartialAsync("_Modal", removeMedication)
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        else
        {
            <div class="position-fixed mt-5 start-50 translate-middle">
                <div class="alert alert-warning" role="alert">
                    <h3>No medication in System</h3>
                </div>
            </div>
        }
    </div>
</div>
@section scripts {
    <script src="~/js/name-filter.js" asp-append-version="true"></script>
}
